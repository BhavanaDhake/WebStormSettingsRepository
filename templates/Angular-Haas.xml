<templateSet group="Angular-Haas">
  <template name="rdaa" value="import {Action} from '@ngrx/store';&#10;&#10;export const $action$ = '$action$';&#10;export const $action$_FAIL = '$action$_FAIL';&#10;export const $action$_SUCCESS = '$action$_SUCCESS';&#10;&#10;export class $action_creator$ implements Action {&#10;  readonly type = $action$;&#10;}&#10;&#10;export class $action_creator$Fail implements Action {&#10;  readonly type = $action$_FAIL;&#10;  constructor(public payload: any) {}&#10;}&#10;&#10;export class $action_creator$Success implements Action {&#10;  readonly type = $action$_SUCCESS;&#10;  constructor(public payload: any) {}&#10;}&#10;&#10;export type $action_creator$Action = $action_creator$ | $action_creator$Fail | $action_creator$Success;&#10;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="action" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="action_creator" expression="" defaultValue="capitalize(camelCase(action))" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ebf" value="export * from './$FILE$';" description="" toReformat="false" toShortenFQNames="true">
    <variable name="FILE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ei" value="export interface $NAME$ {&#10;  $FIELD$: $TYPE$;&#10;}&#10;" description="export interface" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FIELD" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="string" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ec" value="export const $NAME$ = '$NAME$';" description="export const" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>